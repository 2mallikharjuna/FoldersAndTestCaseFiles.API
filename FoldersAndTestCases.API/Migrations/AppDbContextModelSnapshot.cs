// <auto-generated />
using System;
using FoldersAndTestCases.API.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoldersAndTestCaseFiles.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoldersAndTestCases.API.Domain.Models.Folder", b =>
                {
                    b.Property<int>("FolderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentFolderId")
                        .HasColumnType("int");

                    b.HasKey("FolderID");

                    b.HasIndex("ParentFolderId");

                    b.ToTable("Folders","FoldersAndTestCaseFiles");

                    b.HasData(
                        new
                        {
                            FolderID = 100,
                            Name = "TestFolder1"
                        },
                        new
                        {
                            FolderID = 101,
                            Name = "TestFolder2",
                            ParentFolderId = 100
                        });
                });

            modelBuilder.Entity("FoldersAndTestCases.API.Domain.Models.TestCaseFile", b =>
                {
                    b.Property<int>("TestcaseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FolderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StepCount")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TestcaseId");

                    b.HasIndex("FolderId");

                    b.ToTable("TestCases","FoldersAndTestCaseFiles");

                    b.HasData(
                        new
                        {
                            TestcaseId = 100,
                            FolderId = 101,
                            Name = "MyVoice.MP3",
                            StepCount = 2,
                            Type = 1
                        },
                        new
                        {
                            TestcaseId = 101,
                            Name = "Email.txt",
                            StepCount = 5,
                            Type = 3
                        });
                });

            modelBuilder.Entity("FoldersAndTestCases.API.Domain.Models.Folder", b =>
                {
                    b.HasOne("FoldersAndTestCases.API.Domain.Models.Folder", "ParentFolder")
                        .WithMany("ChildFolders")
                        .HasForeignKey("ParentFolderId");
                });

            modelBuilder.Entity("FoldersAndTestCases.API.Domain.Models.TestCaseFile", b =>
                {
                    b.HasOne("FoldersAndTestCases.API.Domain.Models.Folder", "Folder")
                        .WithMany("TestCases")
                        .HasForeignKey("FolderId");
                });
#pragma warning restore 612, 618
        }
    }
}
